<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[categories: Backup | 黃金俠]]></title>
  <link href="http://rubyist.marsz.tw/blog/categories/backup/atom.xml" rel="self"/>
  <link href="http://rubyist.marsz.tw/"/>
  <updated>2012-08-04T12:23:16+08:00</updated>
  <id>http://rubyist.marsz.tw/</id>
  <author>
    <name><![CDATA[MarsZ]]></name>
    <email><![CDATA[marsz330@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用 backup gem 做自動化備份]]></title>
    <link href="http://rubyist.marsz.tw/blog/2012-03-08/backup-gem/"/>
    <updated>2012-03-08T11:57:00+08:00</updated>
    <id>http://rubyist.marsz.tw/blog/2012-03-08/backup-gem</id>
    <content type="html"><![CDATA[<p>source: <a href="https://github.com/meskyanichi/backup" target="_blank">https://github.com/meskyanichi/backup</a><br/>
和 <a href="http://godrb.com/" target="_blank">God</a> 一樣是一個獨立的 gem，因此也可用於其他語言</p>

<!-- more -->


<p><code>backup</code> 的特色:</p>

<ol>
<li>可備份 <code>Redis</code>、<code>MongoDB</code>、<code>Mysql</code> 等 DB</li>
<li>可備份檔案、目錄</li>
<li>備份可儲存於 local disk、<code>Amazon S3</code>、<code>Dropbox</code> 或透過 <code>ftp</code>.<code>scp</code> 等協定將檔案上傳</li>
</ol>


<p>範例檔的備份標的:</p>

<ol>
<li><code>Mysql</code></li>
<li>使用者上傳之頭像圖檔儲存於 <code>Rails</code> public/uploads</li>
<li>備份檔案上傳至 <code>Amazon S3</code></li>
</ol>


<h4>安裝</h4>

<p><code>gem install backup</code></p>

<h4>範例</h4>

<p>打開空檔案即可使用</p>

<p>```ruby backup_config.rb
Backup::Model.new(:my_app, 'db data of my app') do
  # mysql 備份
  database MySQL do |db|</p>

<pre><code>db.name               = "my_app_db"
db.username           = "root"
db.password           = "12341234"
db.host               = "127.0.0.1"
db.port               = 3306
db.socket             = "/tmp/mysql.sock"
</code></pre>

<p>  end</p>

<p>  # user 頭像檔案<br/>
  archive :uploads do |archive|</p>

<pre><code>archive.add "/path/to/my_app/public/uploads"
</code></pre>

<p>  end</p>

<p>  # 上傳至 S3<br/>
  store_with S3 do |s3|</p>

<pre><code>s3.access_key_id      = "12341234"
s3.secret_access_key  = "!@#$%^&amp;*("
s3.region             = "us-east-1"
s3.bucket             = "my_app_backup"
s3.path               = '/'
s3.keep               = 50
</code></pre>

<p>  end</p>

<p>  # 壓縮打包設定
  compress_with Gzip do |compression|</p>

<pre><code>compression.best = true
compression.fast = false
</code></pre>

<p>  end</p>

<p>end
```</p>

<p>執行</p>

<p><code>ruby
backup perform -t my_app -c backup_config.rb
</code></p>

<p>就可進行備份</p>

<p>若要做 <code>Rails</code> 定期備份, 再將指令整合於 <code>whenever</code> 即可<br/>
另外再提供儲存於 local disk 的範例</p>

<p>```ruby backup_config.rb
  store_with Local do |local|</p>

<pre><code>local.path = "/path/to/back/dir"
local.keep = 50
</code></pre>

<p>  end
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[databse 資料以 yaml 格式匯入/匯出]]></title>
    <link href="http://rubyist.marsz.tw/blog/2011-12-28/rake-data-dump-and-load-by-yaml/"/>
    <updated>2011-12-28T14:07:00+08:00</updated>
    <id>http://rubyist.marsz.tw/blog/2011-12-28/rake-data-dump-and-load-by-yaml</id>
    <content type="html"><![CDATA[<p>在備份資料的過程中常用到的一個 gem
可透過 rake 指令將 db 資料以 yaml 格式進行匯出與匯入</p>

<h2>yaml_db</h2>

<p>github: <a href="https://github.com/ludicast/yaml_db" target="_blank">https://github.com/ludicast/yaml_db</a></p>

<!-- more -->


<h2>安裝 (rails 3)</h2>

<p><code>ruby
gem 'yaml_db'
</code></p>

<p><code>
bundle install
</code></p>

<h2>匯出</h2>

<p>把資料匯出到 db/data.yml</p>

<p><code>
bundle exec rake db:data:dump
</code></p>

<p>匯出不同環境的 database (設定在 config/database.yml, 預設是 development)
<code>
bundle exec rake db:data:dump RAILS_ENV=production
</code></p>

<p>若要依照一個 table 一個檔案匯出..
(2011/12/28 notice: 目前此方法在 1.9.2 + 3.1.0 的環境下測試會有一些問題)
<code>
cd path/to/dump_dir  # cd 到欲匯出的 dir 下, 理論上依然是在專案目錄內
db:data:dump_dir
</code></p>

<h2>匯入</h2>

<p>把資料從 db/data.yml 匯入
<code>
bundle exec rake db:data:load
</code></p>

<p>匯入不同環境的 database
<code>
bundle exec rake db:data:load RAILS_ENV=production
</code></p>

<p>匯入某個目錄下的所有的 yaml (原理同 rake db:data:dump_dir)
(2011/12/28 notice: 此方法在 1.9.2 + 3.1.0 下仍有問題)
<code>
cd path/to/yamls_dir # cd 到 yaml 檔存放的 dir
bundle exec rake db:data:load_dir
</code></p>

<h2>其他</h2>

<ul>
<li>配合 whenever 可做定期備份, 並且將 yml 檔上傳至其他處存放</li>
</ul>

]]></content>
  </entry>
  
</feed>
